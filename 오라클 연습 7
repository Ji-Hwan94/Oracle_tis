SET SERVEROUTPUT ON;

CREATE OR REPLACE FUNCTION FUNC_AFTERTAX(
SAL IN NUMBER
)
RETURN NUMBER -- 리턴값의 타입
IS
TAX NUMBER := 0.05;
BEGIN
RETURN (ROUND(SAL - (SAL * TAX)));
END FUNC_AFTERTAX;
/

DECLARE
AFTERTAX NUMBER; -- 변수 선언
BEGIN
  AFTERTAX := FUNC_AFTERTAX(3000);
  DBMS_OUTPUT.PUT_LINE('AFTER-TAX INCOME : ' || AFTERTAX);
END;
/

SELECT FUNC_AFTERTAX(3000) -- AILAS를 사용하는 것이 깔끔하다.
FROM DUAL;

SELECT EMPNO, ENAME, SAL, FUNC_AFTERTAX(SAL) AS AFTERTAX -- 함수는 SELECT문과 같이 사용할 수 있다.
FROM EMP; 

DROP FUNCTION FUNC_AFTERTAX; -- 함수 삭제


-- DML 트리거
CREATE TABLE EMP_TRG -- TRIGGER를 만들기 위해서는 테이블을 먼저 생성해줘야한다.
AS SELECT * FROM EMP;

CREATE OR REPLACE TRIGGER TRG_EMP_NODML_WEEKEND -- TRIGGER 이름 설정
BEFORE  -- 테이블에 EVENT가 발생되기 전에 트리거 내용이 먼저 실행됨
INSERT OR UPDATE OR DELETE ON EMP_TRG -- EMP_TRG 테이블에서 INSERT, UPDATE, DELETE가 될 때 자동으로 발생됨
BEGIN 
IF TO_CHAR(SYSDATE, 'DY') IN ('토', '일') THEN 
IF INSERTING THEN 
RAISE_APPLICATION_ERROR(-20000, '주말 사원정보 추가 불가'); -- 사용자정의 에러 번호
ELSIF UPDATING THEN
RAISE_APPLICATION_ERROR(-20001, '주말 사원정보 수정 불가');
ELSIF DELETING THEN
RAISE_APPLICATION_ERROR(-20002, '주말 사원정보 삭제 불가');
ELSE
RAISE_APPLICATION_ERROR(-20003, '주말 사원정보 변경 불가');
END IF;
END IF;
END;
/

UPDATE emp_trg SET SAL = 3500 WHERE EMPNO = 7788;

SELECT
    *
FROM emp_trg
WHERE empno = 7788;

SELECT
    SYSDATE     
FROM DUAL;

-- DML 트리거의 제작 및 사용

CREATE TABLE EMP_TRG_LOG( -- table을 먼저 생성한다
TABLENAME VARCHAR2(10), -- DML이 수행된 테이블 이름
DML_TYPE VARCHAR2(10), -- DML 명령어 종류
EMPNO NUMBER(4), -- DML 대상이 된 사원 번호
USER_NAME VARCHAR2(30), -- DML을 수행한 USER이름
CHANGE_DATE DATE -- DML이 수행된 날짜
);

CREATE OR REPLACE TRIGGER TRG_EMP_LOG 
AFTER INSERT OR UPDATE OR DELETE ON EMP_TRG
FOR EACH ROW -- 어떤 데이터가 어떻게 바뀌었는지 알 수 있다. 

BEGIN 
IF INSERTING THEN 
    INSERT INTO EMP_TRG_LOG
    VALUES ('EMP_TRG', 'INSERT', :NEW.EMPNO, SYS_CONTEXT('USERENV', 'SESSION_USER'), SYSDATE); -- :NEW.EMPNO 새롭게 추가된 데이터를 select할 수 있다. 
ELSIF UPDATING THEN
    INSERT INTO EMP_TRG_LOG
    VALUES ('EMP_TRG', 'UPDATE', :OLD.EMPNO, SYS_CONTEXT('USERENV', 'SESSION_USER'), SYSDATE); -- :OLD.EMPNO 변경전 데이터를 select 할 수 있다.
ELSIF DELETING THEN
    INSERT INTO EMP_TRG_LOG
    VALUES ('EMP_TRG', 'DELETE', :OLD.EMPNO, SYS_CONTEXT('USERENV', 'SESSION_USER'), SYSDATE); -- :OLD.EMPNO 삭제된 데이터를 select 할 수 있다.
END IF;
END;
/

INSERT INTO EMP_TRG -- EMP_TRG 테이블에 INSERT 실행하기
VALUES(9999, 'TESTEMP', 'CLERK', 7788, TO_DATE('2018-03-03', 'YYYY-MM-DD'), 1200, NULL, 20);

UPDATE EMP_TRG -- EMP_TRG 테이블에 UPDATE 실행하기 
SET SAL = 1500
WHERE MGR = 7788;

SELECT
    *
FROM emp_trg;

SELECT -- emp_trg_log 테이블에 INSERT 와 UPDATE 실행하기
    *
FROM emp_trg_log;

DROP TRIGGER TRG_EMP_LOG; -- 사용하지 않을 트리거는 제거해준다.

